{"version":3,"sources":["components/App/App.styled.jsx","components/Form/Form.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contact.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js"],"names":["Formm","styled","form","Btn","button","Input","input","Form","state","contacts","name","number","nameId","uuId","numberId","contactId","handleChange","e","setState","currentTarget","value","handleNameSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","onChange","type","id","pattern","title","required","Component","Contacts","ul","Contac","li","Contact","onDelete","console","log","map","contact","onClick","Div","div","Filter","filter","filterId","App","keyId","formSubmitHandler","find","alert","prev","deleteContact","prevState","changeFilter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f65b4306.chunk.js","sourcesContent":["import styled from \"@emotion/styled\"\r\n\r\n\r\nexport const Formm = styled.form`\r\ndisplay: flex;\r\nflex-direction: column;\r\nmargin-bottom: 30px;\r\n`\r\n\r\nexport const Btn = styled.button`\r\nwidth: max-content;\r\nmargin-top: 30px;\r\n`\r\nexport const Input=styled.input`\r\nwidth: 200px;\r\n`\r\n","import React, { Component } from 'react'\r\nimport { v4 as uuId } from 'uuid'\r\n\r\nimport { Formm, Btn, Input } from '../App/App.styled'\r\n\r\n\r\nexport default class Form extends Component {\r\n    state = {\r\n        contacts: [],\r\n        name:'',\r\n        number:'',\r\n      }\r\n  nameId = uuId()\r\n  numberId = uuId()\r\n  contactId = uuId()\r\n\r\n      handleChange=(e)=>{\r\n        this.setState({[e.currentTarget.name]:e.currentTarget.value})\r\n      }\r\n    \r\n      handleNameSubmit=(e)=>{\r\n        e.preventDefault();\r\n    \r\n        this.props.onSubmit(this.state)\r\n        // this.contactArray() \r\n        this.reset()\r\n        \r\n  }\r\n  \r\n\r\n    reset=()=>{\r\n        this.setState({name:'', number:''}) \r\n    }\r\n    \r\n    // contactArray=()=>{\r\n    //   this.state.contacts = {\r\n    //     id: this.contactId\r\n    //     name: this.state.name\r\n    //     number: this.state.number\r\n    //   }\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n               <Formm   onSubmit={this.handleNameSubmit}>\r\n                    <label htmlFor={this.nameId}>Name</label>\r\n                        <Input\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id={this.nameId}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required/>\r\n                    <label htmlFor={this.numberId}>Number</label>\r\n                    <Input\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        id={this.numberId}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                      />\r\n                <Btn type=\"submit\">Add contact</Btn>\r\n        </Formm> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import styled from \"@emotion/styled\"\r\n\r\n\r\nexport const Contacts = styled.ul`\r\n\r\n`\r\nexport const Contac = styled.li`\r\n\r\n`\r\nexport const Btn =styled.button`\r\nmargin-left: 30px;\r\nbackground-color: orange;\r\nborder-radius: 5px;\r\n`","import React from 'react'\r\nimport {Contacts, Contac, Btn} from \"./Contacts.styled\"\r\n\r\n\r\nfunction Contact({ contacts, onDelete }) {\r\n  \r\n  console.log(contacts)\r\n    return (\r\n        <div>\r\n          <Contacts>\r\n          {\r\n          contacts.map(contact=><Contac key={contact.id }>\r\n                  <span>{contact.name} : {contact.number}</span>\r\n                  <Btn onClick={() => (onDelete(contact.id))}>Delete</Btn>\r\n                </Contac>\r\n                )\r\n          }\r\n              \r\n              \r\n               \r\n            </Contacts> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import styled from \"@emotion/styled\"\r\n\r\n\r\nexport const Input=styled.input`\r\nwidth: 200px;\r\n`\r\nexport const Div=styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\n`","import React from 'react'\r\nimport {Input, Div} from \"./Filter.styled\"\r\nimport { v4 as filterId } from 'uuid'\r\n\r\nfunction Filter({filter, onChange}) {\r\n    return (\r\n        <Div>\r\n            <label htmlFor={filterId(filter)}>Find contacts by name</label>\r\n            <Input \r\n                value={filter}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                id={filterId(filter)}\r\n            />\r\n        </Div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { v4 as uuId } from \"uuid\";\nimport Form from \"./components/Form/Form\";\nimport Contact from \"./components/Contacts/Contact\";\nimport Filter from \"./components/Filter/Filter\";\n\n\n  \nexport default class App extends Component {\n  state = {\n    contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n    filter: \"\",\n  };\n  \n  keyId=uuId()\n  formSubmitHandler = ({ name, number}) => {\n    const id=uuId()\n    \n    const contCheck = this.state.contacts.find((contact) => contact.name === name)\n      \n     contCheck ?alert(`${name} is olready in contacts.`)\n      : this.setState((prev) => ({ contacts: [...prev.contacts, { id, name, number}]})\n       \n        );\n    console.log(this.state.contacts);\n   \n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== id\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    console.log(this.state.contacts)\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.formSubmitHandler} />\n        <Filter\n          filter={this.state.filter}\n          onChange={this.changeFilter}\n        ></Filter>\n        <h2>Contacts</h2>\n        <Contact\n          id={this.keyId}\n          onDelete={this.deleteContact}\n          contacts={this.state.contacts}\n        ></Contact>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}